# render.yaml - Archivo de configuración para Render

services:
  # --- Servicio de la Base de Datos (PostgreSQL) ---
  # Render maneja la base de datos como un servicio separado.
  # Debes crearla primero desde el panel de control de Render.
  - type: psql
    name: bebidas-db # Puedes ponerle el nombre que quieras
    plan: free # O el plan que necesites

  # --- Servicio del Backend (Django) ---
  # Esto reemplaza tu servicio 'backend' de docker-compose.
  - type: web
    name: bebidas-backend
    env: docker
    # Apunta al directorio donde está el código de tu backend
    rootDir: backend
    # Render construirá el Dockerfile que se encuentra en la carpeta 'backend'
    dockerfilePath: ./Dockerfile
    plan: free # O el plan que necesites
    # Comando para ejecutar las migraciones ANTES de iniciar el servidor
    preDeployCommand: "python manage.py migrate"
    # Comando para iniciar el servidor de producción (Gunicorn es el estándar)
    # Render inyecta la variable $PORT automáticamente.
    dockerCommand: "gunicorn PROYECTO_BEBIDAS.wsgi --bind 0.0.0.0:$PORT"
    envVars:
      - key: DATABASE_URL
        # Esto toma la URL de conexión del servicio de base de datos 'bebidas-db' creado arriba
        fromService:
          type: psql
          name: bebidas-db
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.11 # Asegúrate de que coincida con la versión en tu Dockerfile